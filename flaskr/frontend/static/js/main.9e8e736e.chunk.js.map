{"version":3,"sources":["static/imgs/logo.jpg","components/Shorten.js","components/Redirect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Shorten","URL","useState","state","setState","keyPlaceHolder","setKeyPlaceHolder","shortURL","setShortURL","original_url_error","url_key_error","server_error","error","setError","clicked","setClicked","handleChange","e","preventDefault","target","id","value","copyToClipboard","textToCopy","copy","formPage","onSubmit","sendRequest","a","fetch","method","headers","body","JSON","stringify","then","resp","json","data","ok","short_url","message","catch","className","htmlFor","onChange","type","maxLength","awaitResp","renderPage","original_url","url_key","src","Logo","alt","readOnly","defaultValue","onClick","RedirectPage","URLKey","useParams","redirect","setRedirect","setURL","useEffect","url","setTimeout","window","location","replace","App","exact","path","component","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.9e8e736e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a84a516.jpg\";","import React, { useState } from 'react';\r\nimport Logo from '../static/imgs/logo.jpg';\r\nimport copy from 'copy-to-clipboard';\r\nimport QRCode from 'qrcode.react';\r\n\r\n\r\n\r\nexport const Shorten = () => {\r\n\r\n  const URL = 'https://dndn.us';\r\n  const [state, setState] = useState({'original_url': null, 'url_key': null});\r\n  const [keyPlaceHolder, setKeyPlaceHolder] = useState('?????')\r\n  const [shortURL, setShortURL] = useState();\r\n  const [error, setError] = useState({original_url_error: null, url_key_error: null, server_error: null});  \r\n  const [clicked, setClicked] = useState(false)\r\n\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setError({original_url_error: null, url_key_error: null, server_error: null})\r\n    if (e.target.id === 'url_key') {\r\n      setKeyPlaceHolder(e.target.value)\r\n    }\r\n    setState({\r\n      ...state,\r\n      [e.target.id]: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const sendRequest = async() => {\r\n      await fetch('/api/shorten', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          if (resp.ok) {\r\n            setShortURL(data.short_url);\r\n          } else {\r\n            const message = data.message;\r\n            if (message === ' URL Key Is Used!') {\r\n              setError({\r\n                ...error,\r\n                url_key_error: \"اللاحقة التي إخترتها مستعملة, أختر لاحقة أخرى\"\r\n              });\r\n            } else if (message === ' You Should Provide A URL First!') {\r\n              setError({\r\n                ...error,\r\n                original_url_error: \"يجب عليك إضافة رابط أولا\"\r\n              });\r\n            } else if (message === ' URL is Not Valid') {\r\n              setError({\r\n                ...error,\r\n                original_url_error: 'الرابط الذي أدخلته غير صالح, الرجاء إدخال رابط آخر'\r\n              });\r\n            } else {\r\n              setError({\r\n                ...error,\r\n                server_error: 'حدث خطأ ما, الرجاء المحاولة لاحقاً'\r\n              });\r\n            }\r\n          };\r\n          setState({'original_url': null, 'url_key': null});\r\n          setClicked(false);\r\n        }).catch(error => {\r\n          setError({\r\n            ...error,\r\n            server_error: 'حدث خطأ ما, الرجاء إعادة تحديث الصفحة'\r\n          });\r\n        });\r\n      }).catch(error => {\r\n        setError({\r\n          ...error,\r\n          server_error: 'حدث خطأ ما, الرجاء إعادة تحديث الصفحة'\r\n        });\r\n      });\r\n    }\r\n    setShortURL();\r\n    setClicked(true);\r\n    sendRequest();\r\n  }\r\n\r\n  const copyToClipboard = (e) => {\r\n    e.preventDefault();\r\n    const textToCopy = `${URL}/${shortURL}`;\r\n    copy(textToCopy)\r\n  }\r\n\r\n  const renderLink = () => {\r\n    if (shortURL) {\r\n      return (\r\n        <div>\r\n          <input className=\"col-sm-4 col-md-7\" readOnly type=\"text\" defaultValue={`${URL}/${shortURL}`}/>\r\n          <button className=\"btn btn-sm mt-1 btn-success\" onClick={copyToClipboard}>نسخ الرابط</button>\r\n          <div className=\"mt-2\">\r\n            أو إستخدم رمز الإستجابة السريعة عن طريق الجوال\r\n           <div className=\"mt-2\">\r\n            <QRCode value={`${URL}/${shortURL}`}/>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else if (error.server_error) {\r\n      return (\r\n        <p className=\"text-danger\">{error.server_error}</p>\r\n      )\r\n    } else return null;\r\n  }\r\n\r\n  const renderKey = () => {\r\n    if (error.url_key_error) {\r\n      return (\r\n        <small className=\"text-danger\">{error.url_key_error}</small>\r\n      )\r\n    } else {\r\n      return (\r\n        <span>dndn.us/<i className=\"text-danger\">{keyPlaceHolder}</i> &lArr;\t </span>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const formPage = (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group row justify-content-end\">\r\n        <div className=\"col-sm-4 col-md-7\">\r\n          <label htmlFor=\"original_url\" className=\"float-right col-form-label\">: الرابط الطويل</label>\r\n          <input onChange={handleChange} type=\"text\" id=\"original_url\" className=\"form-control\"/>\r\n          <div className=\"col-form-label\">\r\n            <small className=\"text-danger\">{error.original_url_error}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row justify-content-end\">\r\n        \r\n        <div className=\"col-sm-1 col-md-3\">\r\n          <label htmlFor=\"url_key\" className=\"col-form-label\">: اللاحقة (اختيارية)</label>\r\n          <input maxLength='5' onChange={handleChange} type=\"text\" id=\"url_key\" className=\"form-control\"/>\r\n          <div className=\"col-form-label\">\r\n            {renderKey()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <div className=\"col-sm-10 offset-sm-4\">\r\n          <button type=\"submit\" className=\"btn btn-secondary\">قص</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  )\r\n\r\n  const awaitResp = (\r\n    <div className=\"lds-dual-ring\"/>\r\n  )\r\n\r\n  var renderPage = formPage;\r\n\r\n  if (clicked && state.original_url && state.url_key) {\r\n    renderPage = awaitResp;\r\n  } else {\r\n    renderPage = formPage;\r\n  }\r\n\r\n  return(\r\n    <div className=\"mt-5 p-5 bg-light-grey container text-center arabic-font shadow-effect\">\r\n      <img className=\"img-fluid\" src={Logo} alt=\"DNDN-Logo\" />\r\n      <div className=\"card card-sm-6 card-md-8 card-center\">\r\n        <div className=\"card-header\">\r\n            إختصار الروابط الطويلة\r\n        </div>\r\n        <div className=\"card-body bg-light-grey\">\r\n          {renderPage}\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          {renderLink()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport const RedirectPage = () => {\r\n  const URLKey = useParams();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [URL, setURL] = useState();\r\n  var renderPage = null;\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/shorten/${URLKey.url_key}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setURL(data.url);\r\n          setTimeout(() => {setRedirect(true)}, 2000);\r\n        } else {\r\n          setError(true)\r\n        }\r\n      })\r\n    })\r\n  }, [URLKey.url_key])\r\n\r\n  if (redirect) {\r\n    window.location.replace(URL);\r\n  }\r\n\r\n  if (!redirect && !error) {\r\n    renderPage = (\r\n      <h6 className=\"text-secondary\">... الرجاء إنتظار إعادة التوجيه</h6>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    renderPage = (\r\n      <h6 className=\"text-danger\">حدث خطأ ما, الرجاء المحاولة من جديد لاحقاً</h6>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className=\"container text-center\">\r\n      {renderPage}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { Shorten } from './components/Shorten';\nimport './static/styles.css';\nimport { RedirectPage } from './components/Redirect';\n\n\nclass App extends Component {\n  \n  render() {\n    \n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Shorten}/>\n            <Route exact path=\"/:url_key\" component={RedirectPage}/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}